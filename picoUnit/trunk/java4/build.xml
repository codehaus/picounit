<?xml version="1.0" encoding="UTF-8"?>
<project default="test" name="picounit" basedir=".">
	<property file="../build.properties"/>
	<import file="../build-common.xml"/>

	<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="${jarjar-jar}"/>

	<target name="dist">
		<zip destfile="${distDir}/picounit-${version}.zip">
			<zipfileset dir="${distDir}" includes="picounit-*.jar"/>
			<zipfileset dir="${libDir}" includes="*.jar"/>
		</zip>
	</target>
	
	<target name="compile" depends="compileApi, compileJava5Api, compileImplementation, compileJMocker, compileUnitTestModel, compileUnitTests, compileFunctionalTests, compileExampleTests"/>
	
	<target name="compileApi" depends="init">
		<javac destdir="${apiClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${externalSource}"/>
			</src>
		</javac>
		
		<javac destdir="${apiClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${apiSource}"/>
			</src>
		</javac>
		<copy todir="${apiClasses}">
			<fileset dir="${apiSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compileJava5Api" depends="init">
		<javac destdir="${java5-apiClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${externalSource}"/>
			</src>
		</javac>
		
		<javac destdir="${java5-apiClasses}" target="1.5" source="1.5" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${java5-apiSource}"/>
			</src>
		</javac>
		<copy todir="${java5-apiClasses}">
			<fileset dir="${java5-apiSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compileImplementation" depends="compileApi">
		<javac destdir="${implementationClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${implementationSource}"/>
			</src>
			<classpath>
				<path location="${apiClasses}"/>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<copy todir="${implementationClasses}">
			<fileset dir="${implementationSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="compileJMocker" depends="compileImplementation">
		<javac destdir="${jmockerClasses}" target="1.4" source="1.4"
			deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${jmockerSource}"/>
			</src>
			<classpath>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
				<path location="${apiClasses}"/>
				<path location="${implementationClasses}"/>
			</classpath>
		</javac>
		<copy todir="${jmockerClasses}">
			<fileset dir="${jmockerSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
		
	<target name="compileUnitTestModel" depends="compileApi, compileImplementation, compileJMocker">
		<javac destdir="${unitTestModelClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${unitTestModelSource}"/>
			</src>
			<classpath>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
				<path location="${apiClasses}"/>
				<path location="${implementationClasses}"/>
				<path location="${jmockerClasses}"/>
				<fileset dir="${buildLibDir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<copy todir="${unitTestModelClasses}">
			<fileset dir="${unitTestModelSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="compileUnitTests" depends="compileApi, compileImplementation, compileJMocker, compileUnitTestModel">
		<javac destdir="${unitTestClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${unitTestSource}"/>
			</src>
			<classpath>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
				<path location="${apiClasses}"/>
				<path location="${implementationClasses}"/>
				<path location="${jmockerClasses}"/>
				<path location="${unitTestModelClasses}"/>
				<fileset dir="${buildLibDir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<copy todir="${unitTestClasses}">
			<fileset dir="${unitTestSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="compileFunctionalTests" depends="compileApi, compileImplementation, compileJMocker, compileUnitTestModel">
		<javac destdir="${functionalTestClasses}" target="1.4" source="1.4" deprecation="true" debug="true" optimize="false">
			<src>
				<pathelement location="${functionalTestSource}"/>
			</src>
			<classpath>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${buildLibDir}">
					<include name="*.jar"/>
				</fileset>
				<path location="${apiClasses}"/>
				<path location="${implementationClasses}"/>
				<path location="${jmockerClasses}"/>
				<path location="${unitTestModelClasses}"/>
			</classpath>
		</javac>
		<copy todir="${functionalTestClasses}">
			<fileset dir="${functionalTestSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="compileExampleTests" depends="compileApi, compileImplementation, compileJMocker, compileUnitTestModel">
		<javac destdir="${exampleTestClasses}" target="1.5" source="1.5" deprecation="true" debug="true" optimize="false">
<!--			<compilerarg value="-Xlint:unchecked"/> -->
			<src>
				<pathelement location="${exampleTestSource}"/>
			</src>
			<classpath>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${buildLibDir}">
					<include name="*.jar"/>
				</fileset>
				<path location="${java5-apiClasses}"/>
				<path location="${implementationClasses}"/>
				<path location="${jmockerClasses}"/>
			</classpath>
		</javac>
		<copy todir="${functionalTestClasses}">
			<fileset dir="${functionalTestSource}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="jar" description="o Create the jars" depends="compile, test, jarApi, jarJava5Api, jarCore, jarJMocker"/>

	<target name="jarApi" depends="compileApi">
		<jar jarfile="${apiJar}" basedir="${apiClasses}">
			<include name="**"/>
		</jar>
	</target>

	<target name="jarJava5Api" depends="compileJava5Api">
		<jar jarfile="${java5-apiJar}" basedir="${java5-apiClasses}">
			<include name="**"/>
		</jar>
	</target>

			<target name="jarCore" depends="compileImplementation">
		<jar jarfile="${coreJar}" basedir="${implementationClasses}">
			<include name="**"/>
		</jar>
	</target>
	
	<target name="repackageCore" depends="jarCore">
		<repackageJarAndAppendPlugin repackagedJar="${buildLibDir}/previous-picounit-core.jar"
			originalJar="${coreJar}" pluginClass="picounit.registry.DefaultPlugin"/>
	</target>

	<target name="jarJMocker" depends="compileJMocker">
		<jar jarfile="${jmockerJar}" basedir="${jmockerClasses}"/>
	</target>

	<target name="test" description="o Run the test cases">
		<junit dir="./" printSummary="yes" fork="true" haltonerror="true" haltonfailure="true">
			<sysproperty key="basedir" value="."/>
			<formatter type="xml"/>
			<classpath>
				<fileset dir="${distDir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${libDir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${buildLibDir}">
					<include name="*.jar"/>
				</fileset>
<!--				<path location="${apiClasses}"/> -->
				<path location="${java5-apiClasses}"/> 
				<path location="${implementationClasses}"/>
				<path location="${jmockerClasses}"/>
				<path location="${unitTestClasses}"/>
				<path location="${unitTestModelClasses}"/>
				<path location="${functionalTestClasses}"/>
				<path location="${exampleTestClasses}"/>
			</classpath>
			<batchtest todir="${testReports}">
				<fileset dir="${unitTestSource}">
					<include name="**/**TestSuite.java"/>
					<exclude name="**/Abstract*.java"/>
				</fileset>
				<fileset dir="${functionalTestSource}">
					<include name="**/**TestSuite.java"/>
					<exclude name="**/Abstract*.java" />
				</fileset>
				<fileset dir="${exampleTestSource}">
					<include name="**/**TestSuite.java"/>
					<exclude name="**/Abstract*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>